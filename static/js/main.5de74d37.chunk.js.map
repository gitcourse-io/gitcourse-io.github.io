{"version":3,"sources":["Course.js","CodeBlock.js","Step.js","Term.js","Editor.js","Scenario.js","App.js","serviceWorker.js","store/Step.js","store/Terminal.js","store/Scenario.js","store/Course.js","store/Group.js","index.js","store/index.js"],"names":["Course","Header","Content","Footer","_this","this","react_default","a","createElement","style","padding","row","gutter","col","span","card","marginBottom","props","store","course","title","description","list","itemLayout","scenarios","map","s","Item","key","Meta","avatar","icon","type","theme","twoToneColor","fontSize","href","steps","length","Link","to","concat","getPath","window","location","hash","es_button","onClick","setCurrentScenario","class","repo","substr","data-size","data-show-count","aria-label","Component","inject","observer","CodeBlock","react_highlight_default","className","value","React","Step","state","source","_this2","scenario","height","overflow","react_markdown_default","step","content","renderers","inlineCode","code","stepIndex","prevStep","float","nextStep","Xterm","applyAddon","fit","Term","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","resize","dom","createRef","terminals","terminal","open","ref","width","data","name","toggled","children","loading","Editor","onToggle","bind","assertThisInitialized","node","cursor","active","setState","editor","monaco","console","log","focus","newValue","e","index_esm","split","minSize","defaultSize","position","background","paddingLeft","react_treebeard","lib_default","language","options","selectOnLineNumbers","onChange","editorDidMount","Scenario","resolvePath","match","url","lineHeight","textAlign","color","src_Step","paddingRight","marginTop","marginRight","setView","view","src_Term","src_Editor","App","BrowserRouter","src","Route","exact","path","component","Boolean","hostname","types","model","text","volatile","self","actions","fetchText","flow","regenerator_default","mark","_callee","wrap","_context","prev","next","getRoot","pfs","readFile","sent","toString","stop","afterCreate","setTitle","setDescription","desc","setAuthor","author","addScenario","push","setScenarioDirs","dirs","scenarioDirs","getProgress","vss","localStorage","getItem","Math","floor","Terminal","views","socket","exc","excInput","array","alert","emit","id","input","getParent","on","d","ev","host","_ref","cols","rows","beforeDestroy","require","io","connect","transports","timeout","reconnection","query","write","setGroups","groups","optional","bfs","fetchCourse","config","git","set","dir","corsProxy","singleBranch","depth","JSON","parse","_callee2","_context2","pify","browserfs","fs","setRepo","currentScenario","create","onSnapshot","snapshot","stringify","ReactDOM","render","index_module","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5de74d37.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './App.css';\nimport {Layout, Menu, Card, Icon, Col, Row, List, Button} from 'antd';\nimport {inject, observer} from \"mobx-react\";\nimport {Link, Router} from \"react-router-dom\";\nimport {getPath} from \"mobx-state-tree\";\n\nconst {Header, Content, Footer} = Layout;\nconst gridStyle = {\n  width: '25%',\n  textAlign: 'left',\n  cursor: 'pointer'\n};\n\nclass Course extends Component {\n  render() {\n    return (\n      <div style={{padding: 50}}>\n        <Row gutter={16}>\n          <Col span={18}>\n            <Card style={{marginBottom: 30}}>\n              <h1>{this.props.store.course.title}</h1>\n              {this.props.store.course.description}\n            </Card>\n            <Card title='课程列表' style={{marginBottom: 30}}>\n              <List itemLayout=\"horizontal\">\n\n                {this.props.store.course.scenarios.map(s =>\n                  <List.Item key={s}>\n                    <List.Item.Meta\n                      avatar={<Icon type=\"check-circle\" theme=\"twoTone\" twoToneColor=\"#52c41a\" style={{fontSize: 32}}/>}\n                      title={<a href=\"https://ant.design\">{s.title}</a>}\n                      description={'共 ' + s.steps.length + ' 个步骤'}\n                    />\n                    <Link to={`${getPath(s)}` + window.location.hash}><Button type='primary'\n                                                                              onClick={this.props.store.setCurrentScenario(s)}>开始学习</Button></Link>\n                  </List.Item>\n                )}\n              </List>\n\n            </Card>\n          </Col>\n          <Col span={6}>\n            <Card>\n              <a class=\"github-button\" href={this.props.store.repo.substr(0, this.props.store.repo.length - 4)}\n                 data-size=\"large\" data-show-count=\"true\"\n                 aria-label=\"Star git/git on GitHub\">Star</a>\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default inject('store')(observer(Course));\n","import React from 'react';\nimport Highlight from 'react-highlight'\n\nclass CodeBlock extends React.Component {\n  // propTypes: {\n  //   literal: React.PropTypes.string,\n  //   language: React.PropTypes.string,\n  //   inline: React.PropTypes.bool\n  // },\n\n\n  render() {\n    return (\n      <Highlight className='bash'>\n        {this.props.value}\n      </Highlight>\n    )\n  }\n}\n\nexport default CodeBlock;\n","import React, {Component} from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from './CodeBlock';\nimport {inject, observer} from 'mobx-react';\nimport {Button, Icon} from \"antd\";\n\nclass Step extends Component {\n\n  state = {\n    source: '123'\n  }\n\n  render() {\n    let scenario = this.props.scenario;\n    return (\n      <div style={{padding: 20, height: 'calc(100% - 40px)', overflow: 'auto'}}>\n        <ReactMarkdown source={this.props.step.content} renderers={{inlineCode: CodeBlock, code: CodeBlock}}/>\n        <div style={{height: 40}}>\n          {this.props.store.stepIndex != 0 &&\n          <Button type=\"default\" onClick={() => {\n            this.props.store.prevStep()\n          }}>\n            <Icon type=\"left\"/>上一步\n          </Button>\n          }\n          {this.props.store.stepIndex != scenario.steps.length - 1 &&\n          <Button type=\"primary\" style={{float: 'right'}} onClick={() => {\n            this.props.store.nextStep();\n          }}>\n            下一步<Icon type=\"right\"/>\n          </Button>\n          }\n          {this.props.store.stepIndex == scenario.steps.length - 1 &&\n          <Button type=\"primary\" style={{float: 'right'}} onClick={() => {\n            // this.props.store.setPage('');\n          }}>\n            返回目录<Icon type=\"book\"/>\n          </Button>\n          }\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default inject('store')(observer(Step));\n","import React from 'react';\nimport { measure } from '@pinyin/measure';\nimport {inject} from 'mobx-react';\nimport 'xterm/dist/xterm.css';\nimport {Terminal as Xterm} from 'xterm';\nimport * as fit from \"xterm/lib/addons/fit/fit\";\nXterm.applyAddon(fit);\n// const Div = measure('div');\n\nclass Term extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dom = React.createRef();\n  }\n\n  componentDidMount() {\n\n    this.props.scenario.terminals[0].terminal.open(this.dom);\n    this.props.scenario.terminals[0].terminal.fit();\n  }\n\n  resize = () => {\n    // if (this.props.terminal.terminal)\n    //   this.props.terminal.terminal.fit()\n  }\n\n  render() {\n    return (\n        <div ref={dom => this.dom = dom} style={{width: '100%', height: '100%'}}></div>\n\n    )\n  }\n}\n\nexport default inject('store')(Term);\n","import React from 'react';\nimport {Treebeard} from 'react-treebeard';\nimport SplitPane from \"react-split-pane\";\nimport MonacoEditor from 'react-monaco-editor';\n\nconst data = {\n  name: 'react-treebeard',\n  toggled: true,\n  children: [\n    {\n      name: 'example',\n      children: [\n        {name: 'app.js'},\n        {name: 'data.js'},\n        {name: 'index.html'},\n        {name: 'styles.js'},\n        {name: 'webpack.config.js'}\n      ]\n    },\n    {\n      name: 'node_modules',\n      loading: true,\n      children: []\n    },\n    {\n      name: 'src',\n      children: [\n        {\n          name: 'components',\n          children: [\n            {name: 'decorators.js'},\n            {name: 'treebeard.js'}\n          ]\n        },\n        {name: 'index.js'}\n      ]\n    },\n    {\n      name: 'themes',\n      children: [\n        {name: 'animations.js'},\n        {name: 'default.js'}\n      ]\n    },\n    {name: 'Gulpfile.js'},\n    {name: 'index.js'},\n    {name: 'package.json'}\n  ]\n};\n\nclass Editor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.onToggle = this.onToggle.bind(this);\n  }\n\n  onToggle(node, toggled) {\n    if (this.state.cursor) {\n      this.state.cursor.active = false;\n    }\n    node.active = true;\n    if (node.children) {\n      node.toggled = toggled;\n    }\n    this.setState({cursor: node});\n  }\n\n  editorDidMount(editor, monaco) {\n    console.log('editorDidMount', editor);\n    editor.focus();\n  }\n\n  onChange(newValue, e) {\n    console.log('onChange', newValue, e);\n  }\n\n  render() {\n    const code = '// code';\n    const options = {\n      selectOnLineNumbers: true\n    };\n    return (\n\n      <SplitPane split=\"vertical\" minSize={50} defaultSize={200} style={{position: 'relative'}}>\n        <div style={{background: '#21252B', height: '100%', paddingLeft: 5}}>\n          <Treebeard\n            data={data}\n            onToggle={this.onToggle}\n          />\n        </div>\n        <MonacoEditor\n          width=\"100%\"\n          height=\"100%\"\n          language=\"javascript\"\n          theme=\"vs-dark\"\n          value={code}\n          options={options}\n          onChange={this.onChange}\n          editorDidMount={this.editorDidMount}\n        />\n      </SplitPane>\n    );\n  }\n}\n\nexport default Editor;\n","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\nimport SplitPane from \"react-split-pane\";\nimport {resolvePath} from \"mobx-state-tree\";\nimport Step from \"./Step\";\nimport Term from \"./Term\";\nimport Editor from \"./Editor\";\nimport {Button, Icon} from \"antd\";\n\nclass Scenario extends Component {\n  render() {\n    let scenario = resolvePath(this.props.store, this.props.match.url.substr(10));\n    return (\n      <SplitPane split=\"vertical\" minSize={50} defaultSize={400} style={{position: 'relative'}}>\n        <div style={{height: '100%'}}>\n          <div style={{\n            height: 40,\n            lineHeight: '40px',\n            textAlign: 'center',\n            fontSize: 24,\n            background: '#3095d2',\n            color: '#fff'\n          }}>{scenario.title}</div>\n          <Step step={scenario.steps[this.props.store.stepIndex]} scenario={scenario}/>\n\n        </div>\n        <div style={{height: '100%', background: '#000', overflow: 'hidden'}}>\n          <div style={{height: 40, background: '#333', paddingRight: 10, textAlign: 'right'}}>\n            <Icon type=\"code\" style={{fontSize: '20px', marginTop: 10, marginRight: 10, color: '#fff'}} onClick={() => this.props.store.setView('terminal')}/>\n            <Icon type=\"appstore\" style={{fontSize: '20px', marginTop: 10, marginRight: 10, color: '#fff'}} onClick={() => this.props.store.setView('ide')}/>\n            <Icon type=\"desktop\" style={{fontSize: '20px', marginTop: 10, color: '#fff'}} onClick={() => this.props.store.setView('ide')}/>\n          </div>\n          {this.props.store.view == 'terminal' &&\n          <Term scenario={scenario}/>\n          }\n          {this.props.store.view == 'ide' &&\n          <Editor/>\n          }\n        </div>\n      </SplitPane>\n    )\n  }\n}\n\nexport default inject('store')(observer(Scenario));\n","import React, {Component} from 'react';\nimport './App.css';\nimport {Layout, Menu, Card, Icon, Col, Row, List, Button} from 'antd';\nimport {inject, observer} from \"mobx-react\";\nimport {Route, BrowserRouter as Router} from \"react-router-dom\";\nimport Course from \"./Course\";\nimport Scenario from \"./Scenario\";\n\nconst {Header, Content, Footer} = Layout;\nconst gridStyle = {\n  width: '25%',\n  textAlign: 'left',\n  cursor: 'pointer'\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"wrapper\">\n          <div style={{background: '#345d86'}}>\n            <div style={{fontSize: 24, color: '#fff', float: 'left'}}><img\n              src='http://kfcoding.com/static/logo-min.d61eb61d.png' style={{height: 64}}/> GitCourse\n            </div>\n          </div>\n          <Route exact path=\"/gitcourse\" component={Course}/>\n          <Route path=\"/gitcourse/course/scenarios/:id\" component={Scenario}/>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default inject('store')(observer(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {types, flow, getRoot, getSnapshot} from 'mobx-state-tree';\n\nexport const Step = types\n  .model('Step', {\n    title: '',\n    text: '',\n    content: '',\n    // scenarios: types.array(Scenario)\n  }).volatile(self => ({\n    // scenarioDirs: []\n  })).actions(self => {\n    const fetchText = flow(function* () {\n      let data = yield getRoot(self).pfs.readFile(self.text);\n      self.content = data.toString();\n    })\n    return {\n      afterCreate() {\n        fetchText()\n      },\n      setTitle(title) {\n        self.title = title;\n      },\n      setDescription(desc) {\n        self.description = desc;\n      },\n      setAuthor(author) {\n        self.author = author;\n      },\n      addScenario(scenario) {\n        self.scenarios.push(scenario);\n      },\n      setScenarioDirs(dirs) {\n        self.scenarioDirs = dirs;\n      },\n      // fetchScenarios,\n      getProgress() {\n        let vss = localStorage.getItem('visitedScenarios');\n        if (!vss) {\n          return 0;\n        }\n        return Math.floor(vss.length / self.scenarios.length)\n      }\n    }\n  });\n","import {types, flow, getRoot, getParent} from 'mobx-state-tree';\nimport {Terminal as Xterm} from 'xterm';\nimport * as fit from \"xterm/lib/addons/fit/fit\";\n\nXterm.applyAddon(fit);\n\nexport const Terminal = types\n  .model('Terminal', {\n    // id: types.identifier(),\n    name: 'tt',\n  }).volatile(self => ({\n    terminal: {}\n  })).views(self => ({\n    get store() {\n      return getRoot(self)\n    }\n  })).actions(self => {\n    let terminal = null;\n    let socket = null\n\n    function afterCreate() {\n      socket = getParent(self, 2).socket;\n      terminal = new Xterm({\n        fontSize: 16\n      });\n      self.terminal = terminal;\n      // socket.emit('term.open', {id: self.id, cols: terminal.cols, rows: terminal.rows, cwd: WORKSPACE_DIR});\n      terminal.on('data', d=>console.log(d));\n      terminal.on('key', (key, ev) => {\n        socket.emit('data', {host: 'HOST1', data: key});\n      });\n      terminal.on('resize', ({cols, rows}) => {\n        socket.emit('terminal-resize', {cols: cols, rows: rows})\n      })\n    }\n\n    function beforeDestroy() {\n      socket.emit('term.close', {id: self.id})\n    }\n\n    function exc(path) {\n      // var excInput = 'g++ main.cpp -o main && ./main\\n'\n      var excInput;\n      var array = path.split('.');\n      if (array[array.length - 1] === 'cpp') {\n        excInput = 'g++ ' + path + ' -o /tmp/out.o && /tmp/out.o\\n';\n      } else if (array[array.length - 1] === 'py') {\n        excInput = 'python ' + path + '\\n';\n      } else {\n        alert(\"不是合法文件\");\n      }\n      socket.emit('term.input', {id: self.id, input: excInput})\n    }\n\n    return {\n      exc,\n      afterCreate,\n      beforeDestroy\n    }\n  });\n","import {types, flow, getRoot, getSnapshot} from 'mobx-state-tree';\nimport {Step} from \"./Step\";\nimport {Terminal} from \"./Terminal\";\nimport io from 'socket.io-client';\nconst uuidv4 = require('uuid/v4');\n\nexport const Scenario = types\n  .model('Scenario', {\n    title: '',\n    description: '',\n    steps: types.array(Step),\n    terminals: types.array(Terminal),\n  }).volatile(self => ({\n    socket: io.connect('//ws.katacoda.com', {\n      transports: [\"websocket\"],\n      timeout: 120 * 1e3,\n      reconnection: false,\n      query: 'dockerimage=dind&course=docker&id=deploying-first-container&originalPathwayId='\n    })\n  })).views(self => ({\n\n  })).actions(self => {\n\n    return {\n      afterCreate() {\n        self.terminals.push({})\n\n        self.socket.on('data', function (data) {\n          self.terminals[0].terminal.write(data.data)\n        });\n      },\n      setTitle(title) {\n        self.title = title;\n      },\n      setDescription(desc) {\n        self.description = desc;\n      }\n    }\n  });\n","import {types, flow, getRoot, getSnapshot} from 'mobx-state-tree';\nimport {Group} from \"./Group\";\nimport {Scenario} from \"./Scenario\";\n\nexport const Course = types\n  .model('Course', {\n    title: '',\n    description: '',\n    author: '',\n    // groups: types.array(Group)\n    scenarios: types.array(Scenario)\n  }).volatile(self => ({\n    scenarioDirs: []\n  })).actions(self => {\n    // const fetchScenarios = flow(function* () {\n    //   self.scenarios = [];\n    //   for (let i in self.scenarioDirs) {\n    //     try {\n    //       let dir = self.scenarioDirs[i];\n    //       let data = yield getRoot(self).pfs.readFile(dir + '/config.json');\n    //       let config = JSON.parse(data.toString());\n    //       let scenario = Scenario.create({\n    //         dir: dir,\n    //         title: config.title,\n    //         description: config.description,\n    //       });\n    //       scenario.setStepDirs(config.steps);\n    //       self.scenarios.push(scenario);\n    //     } catch (e) {\n    //       console.error(e);\n    //     }\n    //   }\n    //\n    //   Promise.all(self.scenarios.map(async s => {\n    //     await s.fetchSteps();\n    //   }))\n    // })\n    return {\n      afterCreate() {\n      },\n      setTitle(title) {\n        self.title = title;\n      },\n      setDescription(desc) {\n        self.description = desc;\n      },\n      setAuthor(author) {\n        self.author = author;\n      },\n      addScenario(scenario) {\n        self.scenarios.push(scenario);\n      },\n      setScenarioDirs(dirs) {\n        self.scenarioDirs = dirs;\n      },\n      // fetchScenarios,\n      getProgress() {\n        let vss = localStorage.getItem('visitedScenarios');\n        if (!vss) {\n          return 0;\n        }\n        return Math.floor(vss.length / self.scenarios.length)\n      },\n      setGroups(groups) {\n        self.groups = groups;\n      }\n    }\n  });\n","import {types, flow, getRoot, getSnapshot} from 'mobx-state-tree';\nimport {Scenario} from \"./Scenario\";\n\nexport const Group = types\n  .model('Group', {\n    title: '',\n    description: '',\n    scenarios: types.array(Scenario)\n  }).volatile(self => ({\n    scenarioDirs: []\n  })).actions(self => {\n    // const fetchScenarios = flow(function* () {\n    //   self.scenarios = [];\n    //   for (let i in self.scenarioDirs) {\n    //     try {\n    //       let dir = self.scenarioDirs[i];\n    //       let data = yield getRoot(self).pfs.readFile(dir + '/config.json');\n    //       let config = JSON.parse(data.toString());\n    //       let scenario = Scenario.create({\n    //         dir: dir,\n    //         title: config.title,\n    //         description: config.description,\n    //       });\n    //       scenario.setStepDirs(config.steps);\n    //       self.scenarios.push(scenario);\n    //     } catch (e) {\n    //       console.error(e);\n    //     }\n    //   }\n    //\n    //   Promise.all(self.scenarios.map(async s => {\n    //     await s.fetchSteps();\n    //   }))\n    // })\n    return {\n      afterCreate() {\n      },\n      setTitle(title) {\n        self.title = title;\n      },\n      setDescription(desc) {\n        self.description = desc;\n      },\n      setAuthor(author) {\n        self.author = author;\n      },\n      addScenario(scenario) {\n        self.scenarios.push(scenario);\n      },\n      setScenarioDirs(dirs) {\n        self.scenarioDirs = dirs;\n      },\n      // fetchScenarios,\n      getProgress() {\n        let vss = localStorage.getItem('visitedScenarios');\n        if (!vss) {\n          return 0;\n        }\n        return Math.floor(vss.length / self.scenarios.length)\n      }\n    }\n  });\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Store} from \"./store\";\nimport {onSnapshot} from \"mobx-state-tree\";\nimport {Provider} from \"mobx-react\";\n\nconst store = Store.create();\n\nonSnapshot(store, (snapshot) => {\n  console.dir(JSON.stringify(snapshot))\n})\n\nReactDOM.render(<Provider store={store}><App/></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {types, flow} from 'mobx-state-tree';\nimport * as browserfs from \"browserfs\";\nimport * as pify from \"pify\";\nimport * as git from \"isomorphic-git\";\nimport {Course} from \"./Course\";\nimport {Scenario} from \"./Scenario\";\n\nexport const Store = types.model('Store', {\n  loading: true,\n  repo: '',\n  course: types.optional(Course, {}),\n  stepIndex: 0,\n  view: 'terminal'\n  // currentScenario: types.maybe(types.reference(Scenario))\n}).volatile(self => ({\n  bfs: {},\n  pfs: {}\n})).actions(self => {\n  const fetchCourse = flow(function* (repo) {\n    git.plugins.set('fs', self.bfs);\n    // yield git.pull({\n    //   dir: '/',\n    //   ref: 'master',\n    //   fastForwardOnly: true,\n    //   singleBranch: true\n    // })\n    yield git.clone({\n      dir: '.',\n      corsProxy: 'https://cors.isomorphic-git.org',\n      url: repo,\n      singleBranch: true,\n      depth: 1\n    });\n    let data = yield self.pfs.readFile('course.json');\n    let config = JSON.parse(data.toString());\n    self.course = config;\n\n  })\n  return {\n    afterCreate: flow(function*() {\n      let repo = window.location.hash.substr(1);\n      self.repo = repo;\n      yield pify(browserfs.configure)({fs: \"IndexedDB\", options: {}});\n      self.bfs = browserfs.BFSRequire('fs');\n      self.pfs = pify(self.bfs);\n      yield fetchCourse(repo);\n\n    }),\n    setRepo(repo) {\n      self.repo = repo\n    },\n    setCurrentScenario(scenario) {\n      self.currentScenario = scenario;\n    },\n    setView(view) {\n      self.view = view;\n    },\n    nextStep() {\n      self.stepIndex++;\n    },\n    prevStep() {\n      self.stepIndex--;\n    },\n  }\n})\n"],"sourceRoot":""}